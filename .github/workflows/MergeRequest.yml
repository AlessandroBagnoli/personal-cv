name: Merge Request
on:
  pull_request:
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build_n_test:
    name: Build and check tag
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4

      - name: Tag check
        run: |
          export ORIGINAL_CODE_TAG=$(echo -n | cat version) && echo "Code tag is: $ORIGINAL_CODE_TAG"
          [[ $ORIGINAL_CODE_TAG =~ ^[0-9]+.[0-9]+.[0-9]+$ ]] || (echo $'unsuitable tag for deployment: regex \'^[0-9]+.[0-9]+.[0-9]+$\' was not respected'; exit 99)
          export CODE_TAG="v${ORIGINAL_CODE_TAG}"
          echo "CODE_TAG=$CODE_TAG" >> $GITHUB_ENV
          echo "PRESERVE_TAG=false" >> $GITHUB_ENV
          git fetch --unshallow origin
          git tag | grep "$CODE_TAG" && export CODE_TAG_EXISTS=true && echo "ERROR: THIS TAG ALREADY EXISTS WITHIN THE REPO! EXITING" && sed -i 's/PRESERVE_TAG=false/PRESERVE_TAG=true/g' $GITHUB_ENV  && exit 99
          echo " ==> TAGS: Checks ok!"
          echo " ==> TAGS: Tag is $CODE_TAG" && [[ $CODE_TAG_EXISTS != "true" ]] && git tag $CODE_TAG && git push --tags
          echo "ORIGINAL_CODE_TAG=$ORIGINAL_CODE_TAG" >> $GITHUB_ENV

      - name: Build LaTeX document
        uses: xu-cheng/latex-action@v3
        with:
          root_file: "*.tex"
          glob_root_file: true
          latexmk_use_xelatex: true
          post_compile: "cp cv_eng.pdf CV_Bagnoli_Alessandro_EN.pdf && cp cv_ita.pdf CV_Bagnoli_Alessandro_IT.pdf"

      - name: Create draft release
        run: |
          gh release create ${{ env.CODE_TAG }} \
          --draft \
          --target ${{ github.event.pull_request.base.ref }} \
          --title 'Curriculum Vitae ${{ env.ORIGINAL_CODE_TAG }} just for testing purpose!!! Will be deleted' \
          './CV_Bagnoli_Alessandro_EN.pdf' \
          './CV_Bagnoli_Alessandro_IT.pdf'

      - name: Delete tag and release
        if: ${{ always() }}
        run: |
          [[ "${{ env.PRESERVE_TAG }}" == "false" ]] && git push --delete origin $CODE_TAG && gh release delete ${{ env.CODE_TAG }} -y

      - name: Send Telegram notification on success
        run: |
          ROCKET_EMOJI=$(echo -e '\U0001F680')
          curl --request POST \
          --url    'https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage' \
          --header 'Accept: application/json' \
          --header 'Content-Type: application/json' \
          --header 'User-Agent: GitHub Action' \
          --data '
          {
            "chat_id": "${{ secrets.TELEGRAM_CHAT_ID }}",
            "text": "'$ROCKET_EMOJI' Pull pipeline passed! Merge whenever you are ready to generate your PDFs"
          }
          '

      - name: Send Telegram notification on failure
        if: ${{ failure() }}
        run: |
          WARNING_EMOJI=$(echo -e '\U00026A0')
          curl --request POST \
          --url    'https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage' \
          --header 'Accept: application/json' \
          --header 'Content-Type: application/json' \
          --header 'User-Agent: GitHub Action' \
          --data '
          {
            "chat_id": "${{ secrets.TELEGRAM_CHAT_ID }}",
            "text": "'$WARNING_EMOJI' Pull pipeline failed!"
          }
          '